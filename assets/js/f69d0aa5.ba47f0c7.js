"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[8867],{5441:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=s(4848),r=s(8453);const o={type:"docs",title:"PostgreSQL Data Accelerator",sidebar_label:"PostgreSQL Data Accelerator",description:"PostgreSQL Data Accelerator Documentation",sidebar_position:4},a=void 0,c={id:"data-accelerators/postgres/index",title:"PostgreSQL Data Accelerator",description:"PostgreSQL Data Accelerator Documentation",source:"@site/docs/data-accelerators/postgres/index.md",sourceDirName:"data-accelerators/postgres",slug:"/data-accelerators/postgres/",permalink:"/data-accelerators/postgres/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/data-accelerators/postgres/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{type:"docs",title:"PostgreSQL Data Accelerator",sidebar_label:"PostgreSQL Data Accelerator",description:"PostgreSQL Data Accelerator Documentation",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"SQLite Data Accelerator",permalink:"/data-accelerators/sqlite"},next:{title:"Data Connectors",permalink:"/data-connectors/"}},i={},d=[{value:"Configuration",id:"configuration",level:2}];function l(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["To use PostgreSQL as Data Accelerator, specify ",(0,n.jsx)(t.code,{children:"postgres"})," as the ",(0,n.jsx)(t.code,{children:"engine"})," for acceleration."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    acceleration:\n      engine: postgres\n"})}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["The connection to PostgreSQL can be configured by providing the following ",(0,n.jsx)(t.code,{children:"params"}),":"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_host"}),": The hostname of the PostgreSQL server."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_port"}),": The port of the PostgreSQL server."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_db"}),": The name of the database to connect to."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_user"}),": The username to connect with."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_pass_key"}),": The secret key containing the password to connect with."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_pass"}),": The raw password to connect with, ignored if ",(0,n.jsx)(t.code,{children:"pg_pass_key"})," is provided."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_sslmode"}),": Optional parameter, specifies the SSL/TLS behavior for the connection, supported values:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"verify-full"}),": (default) This mode requires an SSL connection, a valid root certificate, and the server host name to match the one specified in the certificate."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"verify-ca"}),": This mode requires an SSL connection and a valid root certificate."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"required"}),": This mode requires an SSL connection."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"prefer"}),": This mode will try to establish a secure SSL connection if possible, but will connect insecurely if the server does not support SSL."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"disable"}),": This mode will not attempt to use an SSL connection, even if the server supports it."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_sslrootcert"}),": Optional parameter specifying the path to a custom PEM certificate that the connector will trust."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Configuration ",(0,n.jsx)(t.code,{children:"params"})," are provided either in the ",(0,n.jsx)(t.code,{children:"acceleration"})," section of a dataset."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    acceleration:\n      engine: postgres\n      params:\n        pg_host: localhost\n        pg_port: 5432\n        pg_db: my_database\n        pg_user: my_user\n        pg_pass_key: my_secret\n        pg_sslmode: required\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Additionally, an ",(0,n.jsx)(t.code,{children:"engine_secret"})," may be provided when configuring a PostgreSQL data store to allow for using a different secret store to specify the password for a dataset using PostgreSQL as both the data source and data store."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: data_store\n      pg_user: my_user\n      pg_pass_key: my_secret\n    acceleration:\n      engine: postgres\n      engine_secret: pg_backend\n      params:\n        pg_host: localhost\n        pg_port: 5433\n        pg_db: data_store\n        pg_user: my_user\n        pg_pass_key: my_secret\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(6540);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);