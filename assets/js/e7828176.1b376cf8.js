"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[6975],{1983:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>i});var t=a(4848),c=a(8453);const s={title:"DuckDB Data Connector",sidebar_label:"DuckDB Data Connector",description:"DuckDB Data Connector Documentation"},o=void 0,d={id:"components/data-connectors/duckdb",title:"DuckDB Data Connector",description:"DuckDB Data Connector Documentation",source:"@site/docs/components/data-connectors/duckdb.md",sourceDirName:"components/data-connectors",slug:"/components/data-connectors/duckdb",permalink:"/components/data-connectors/duckdb",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/components/data-connectors/duckdb.md",tags:[],version:"current",frontMatter:{title:"DuckDB Data Connector",sidebar_label:"DuckDB Data Connector",description:"DuckDB Data Connector Documentation"},sidebar:"docsSidebar",previous:{title:"Dremio Data Connector",permalink:"/components/data-connectors/dremio"},next:{title:"File Data Connector",permalink:"/components/data-connectors/file"}},r={},i=[{value:"Dataset Source",id:"dataset-source",level:2},{value:"Configuration",id:"configuration",level:2},{value:"DuckDB Functions",id:"duckdb-functions",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"dataset-source",children:"Dataset Source"}),"\n",(0,t.jsxs)(n.p,{children:["To connect to a DuckDB ",(0,t.jsx)(n.a,{href:"https://duckdb.org/docs/connect/overview#persistent-database",children:"persistent database"})," as a data source, specify ",(0,t.jsx)(n.code,{children:"duckdb"})," as the selector in the ",(0,t.jsx)(n.code,{children:"from"})," value for the dataset."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: duckdb:database.schema.table\n    name: my_dataset\n    params:\n      duckdb_open: path/to/duckdb_file.duckdb\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The DuckDB data connector can be configured by providing the following ",(0,t.jsx)(n.code,{children:"params"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"duckdb_open"}),": The name for the file to back the DuckDB database."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configuration ",(0,t.jsx)(n.code,{children:"params"})," are provided either in the top level ",(0,t.jsx)(n.code,{children:"dataset"})," for a dataset source, or in the ",(0,t.jsx)(n.code,{children:"acceleration"})," section for a data store."]}),"\n",(0,t.jsx)(n.p,{children:"A generic example of DuckDB data connector configuration."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: duckdb:database.schema.table\n    name: my_dataset\n    params:\n      duckdb_open: path/to/duckdb_file.duckdb\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example uses a DuckDB database file that is at location /my/path/"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: duckdb:sample_data.nyc.rideshare\n    name: nyc_rideshare\n    params:\n      duckdb_open: /my/path/my_database.db\n"})}),"\n",(0,t.jsx)(n.h2,{id:"duckdb-functions",children:"DuckDB Functions"}),"\n",(0,t.jsxs)(n.p,{children:["Common ",(0,t.jsx)(n.a,{href:"https://duckdb.org/docs/data/overview",children:"data import"})," DuckDB functions can also define datasets. Instead of a fixed table reference (e.g. ",(0,t.jsx)(n.code,{children:"database.schema.table"}),"), a DuckDB function is provided in the ",(0,t.jsx)(n.code,{children:"from:"})," key. For example"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: duckdb:database.schema.table\n    name: my_dataset\n    params:\n      duckdb_open: path/to/duckdb_file.duckdb\n\n  - from: duckdb:read_csv('test.csv', header = false)\n    name: from_function\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Datasets created from DuckDB functions are similar to a standard ",(0,t.jsx)(n.code,{children:"SELECT"})," query. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: duckdb:read_csv('test.csv', header = false)\n"})}),"\n",(0,t.jsx)(n.p,{children:"is equivalent to:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- from_function\nSELECT * FROM read_csv('test.csv', header = false)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Many DuckDB data imports can be rewritten as DuckDB functions, making them usable as Spice datasets. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM 'todos.json';\n\n-- As a DuckDB function\nSELECT * FROM read_json('todos.json');\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>d});var t=a(6540);const c={},s=t.createContext(c);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);