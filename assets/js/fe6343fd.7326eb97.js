"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[7876],{7638:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var s=a(4848),t=a(8453);const n={title:"Frequently Asked Questions",sidebar_label:"FAQ",description:"Get answers to common questions about Spice.ai, including its features, differences from other tools, and use cases",pagination_prev:null,pagination_next:null,sidebar_position:2},o=void 0,r={id:"faq/index",title:"Frequently Asked Questions",description:"Get answers to common questions about Spice.ai, including its features, differences from other tools, and use cases",source:"@site/docs/faq/index.md",sourceDirName:"faq",slug:"/faq/",permalink:"/faq/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/faq/index.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Frequently Asked Questions",sidebar_label:"FAQ",description:"Get answers to common questions about Spice.ai, including its features, differences from other tools, and use cases",pagination_prev:null,pagination_next:null,sidebar_position:2},sidebar:"docsSidebar"},c={},d=[{value:"1. What is Spice?",id:"1-what-is-spice",level:2},{value:"2. Why should I use Spice?",id:"2-why-should-i-use-spice",level:2},{value:"3. How is Spice different?",id:"3-how-is-spice-different",level:2},{value:"4. Is Spice a cache?",id:"4-is-spice-a-cache",level:2},{value:"5. Is Spice a CDN for databases?",id:"5-is-spice-a-cdn-for-databases",level:2},{value:"6. How does Spice differ from Trino/Presto and Dremio?",id:"6-how-does-spice-differ-from-trinopresto-and-dremio",level:2},{value:"7. How does Spice compare to Spark?",id:"7-how-does-spice-compare-to-spark",level:3},{value:"8. How does Spice compare to DuckDB?",id:"8-how-does-spice-compare-to-duckdb",level:3}];function l(e){const i={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"1-what-is-spice",children:"1. What is Spice?"}),"\n",(0,s.jsx)(i.p,{children:"Spice is a portable runtime that offers developers a unified SQL interface to materialize, accelerate, and query data from any database, data warehouse, or data lake. It functions as an application-specific, tier-optimized Database CDN."}),"\n",(0,s.jsx)(i.h2,{id:"2-why-should-i-use-spice",children:"2. Why should I use Spice?"}),"\n",(0,s.jsx)(i.p,{children:"Spice makes it easy and fast to query data from one or more sources using SQL. You can co-locate a managed dataset with your application or machine learning model and accelerate it with Arrow in-memory, SQLite/DuckDB, or PostgreSQL for fast, high-concurrency, low-latency queries."}),"\n",(0,s.jsx)(i.h2,{id:"3-how-is-spice-different",children:"3. How is Spice different?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Application-focused:"})," Designed to integrate at the application level with a flexible 1:1 or 1",":N"," application-to-Spice mapping."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Dual-Engine Acceleration:"})," Supports OLAP and OLTP databases at the dataset level."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Separation of Materialization and Storage/Compute:"})," Separates storage and compute for optimal data placement."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Edge to Cloud Native:"})," Deployable anywhere from standalone instances to Kubernetes containers and public clouds."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"4-is-spice-a-cache",children:"4. Is Spice a cache?"}),"\n",(0,s.jsx)(i.p,{children:"No, but you can think of Spice data materialization as an active cache or data prefetcher. Unlike a cache that fetches data on a miss, Spice prefetches and materializes filtered data on an interval or as new data is available."}),"\n",(0,s.jsx)(i.h2,{id:"5-is-spice-a-cdn-for-databases",children:"5. Is Spice a CDN for databases?"}),"\n",(0,s.jsx)(i.p,{children:"Yes, Spice acts like a CDN for different data sources. It allows you to load a working set of your database where it's most frequently accessed, such as from a data application or for AI inference."}),"\n",(0,s.jsx)(i.h2,{id:"6-how-does-spice-differ-from-trinopresto-and-dremio",children:"6. How does Spice differ from Trino/Presto and Dremio?"}),"\n",(0,s.jsx)(i.p,{children:"Spice is designed for data and AI applications, while systems like Trino/Presto and Dremio are optimized for big data and real-time analytics. Spice specializes in high-concurrency, low-latency access and data materialization close to the application."}),"\n",(0,s.jsx)(i.p,{children:"A key differentiator of Spice is its single-node distributed nature, which sets it apart from bulky, centralized Cloud Data Warehouses (CDW). Instead of consolidating data access into a central hub, Spice facilitates bringing working sets of use-case/application-specific data closer to where it's actually queried and used. This architecture provides several advantages:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Proximity:"})," By co-locating data with applications, Spice reduces latency and improves performance for frequent data access patterns."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Flexibility:"})," You can quickly spin up multiple, lightweight instances of Spice tailored for different datasets and use cases."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Scalability:"})," Decentralized materialization allows for better resource control and optimization, as each standalone instance can scale independently based on its workload requirements."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Efficiency:"})," Reduces the need for massive data movement operations across the network, lowering bandwidth consumption and speeding up query times."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"7-how-does-spice-compare-to-spark",children:"7. How does Spice compare to Spark?"}),"\n",(0,s.jsx)(i.p,{children:"Spark is primarily designed for large-scale data processing and batch-processing pipelines with its distributed computing engine. In contrast, Spice is focused on accelerating data access and query speeds for applications through materialization and tier-optimized storage strategies."}),"\n",(0,s.jsx)(i.h3,{id:"8-how-does-spice-compare-to-duckdb",children:"8. How does Spice compare to DuckDB?"}),"\n",(0,s.jsx)(i.p,{children:"DuckDB is an embedded database designed for OLAP queries on large datasets. Spice integrates DuckDB to accelerate queries and as a data connector, meaning you can use Spice to access any data DuckDB can access and query."})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,i,a)=>{a.d(i,{R:()=>o,x:()=>r});var s=a(6540);const t={},n=s.createContext(t);function o(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);