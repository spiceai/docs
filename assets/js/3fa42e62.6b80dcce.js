"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[8444],{1783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=n(4848),o=n(8453);const r={title:"PostgreSQL Data Connector",sidebar_label:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation"},a=void 0,c={id:"components/data-connectors/postgres/index",title:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation",source:"@site/docs/components/data-connectors/postgres/index.md",sourceDirName:"components/data-connectors/postgres",slug:"/components/data-connectors/postgres/",permalink:"/components/data-connectors/postgres/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/components/data-connectors/postgres/index.md",tags:[],version:"current",frontMatter:{title:"PostgreSQL Data Connector",sidebar_label:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation"},sidebar:"docsSidebar",previous:{title:"ODBC Data Connector",permalink:"/components/data-connectors/odbc"},next:{title:"S3 Data Connector",permalink:"/components/data-connectors/s3"}},i={},d=[{value:"Dataset Source/Federated SQL Query",id:"dataset-sourcefederated-sql-query",level:2},{value:"Configuration",id:"configuration",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"dataset-sourcefederated-sql-query",children:"Dataset Source/Federated SQL Query"}),"\n",(0,s.jsxs)(t.p,{children:["To use PostgreSQL as a dataset source or for federated SQL query, specify ",(0,s.jsx)(t.code,{children:"postgres"})," as the selector in the ",(0,s.jsx)(t.code,{children:"from"})," value for the dataset."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n"})}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(t.p,{children:["The connection to PostgreSQL can be configured by providing the following ",(0,s.jsx)(t.code,{children:"params"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_host"}),": The hostname of the PostgreSQL server."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_port"}),": The port of the PostgreSQL server."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_db"}),": The name of the database to connect to."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_user"}),": The username to connect with."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_pass"}),": The password to connect with. Use the ",(0,s.jsx)(t.a,{href:"/components/secret-stores/",children:"secret replacement syntax"})," to load the password from a secret store, e.g. ",(0,s.jsx)(t.code,{children:"${secrets:my_pg_pass}"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_sslmode"}),": Optional. Specifies the SSL/TLS behavior for the connection, supported values:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"verify-full"}),": (default) This mode requires an SSL connection, a valid root certificate, and the server host name to match the one specified in the certificate."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"verify-ca"}),": This mode requires a TLS connection and a valid root certificate."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"require"}),": This mode requires a TLS connection."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"prefer"}),": This mode will try to establish a secure TLS connection if possible, but will connect insecurely if the server does not support TLS."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"disable"}),": This mode will not attempt to use a TLS connection, even if the server supports it."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pg_sslrootcert"}),": Optional parameter specifying the path to a custom PEM certificate that the connector will trust."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"connection_pool_size"}),": Optional. The maximum number of connections to keep open in the connection pool. Default is 10."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Configuration ",(0,s.jsx)(t.code,{children:"params"})," are provided either in the top level ",(0,s.jsx)(t.code,{children:"dataset"})," for a dataset source and federated SQL query, or in the ",(0,s.jsx)(t.code,{children:"acceleration"})," section for a data store."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: my_database\n      pg_user: my_user\n      pg_pass: ${secrets:my_pg_pass}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: my_database\n      pg_user: my_user\n      pg_pass: ${secrets:my_pg_pass}\n      pg_sslmode: verify-ca\n      pg_sslrootcert: ./custom_cert.pem\n"})}),"\n",(0,s.jsx)(t.p,{children:"Specify different secrets for a PostgreSQL source and acceleration:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: data_store\n      pg_user: my_user\n      pg_pass: ${secrets:pg1_pass}\n    acceleration:\n      engine: postgres\n      params:\n        pg_host: localhost\n        pg_port: 5433\n        pg_db: acceleration\n        pg_user: two_user_two_furious\n        pg_pass: ${secrets:pg2_pass}\n"})}),"\n",(0,s.jsx)(t.admonition,{title:"Limitations",type:"warning",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["The Postgres federated queries may result in unexpected result types due to the difference in DataFusion and Postgres size increase rules. Please explicitly specify the expected output type of aggregation functions when writing query involving Postgres table in Spice. For example, rewrite ",(0,s.jsx)(t.code,{children:"SUM(int_col)"})," into ",(0,s.jsx)(t.code,{children:"CAST (SUM(int_col) as BIGINT"}),"."]}),"\n"]})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(6540);const o={},r=s.createContext(o);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);