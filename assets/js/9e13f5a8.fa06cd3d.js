"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[9169],{2431:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>t});var i=d(4848),s=d(8453);const o={title:"Embeddings",sidebar_label:"Embeddings",description:"Embeddings YAML reference"},c="Embeddings",r={id:"reference/spicepod/embeddings",title:"Embeddings",description:"Embeddings YAML reference",source:"@site/docs/reference/spicepod/embeddings.md",sourceDirName:"reference/spicepod",slug:"/reference/spicepod/embeddings",permalink:"/reference/spicepod/embeddings",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/reference/spicepod/embeddings.md",tags:[],version:"current",frontMatter:{title:"Embeddings",sidebar_label:"Embeddings",description:"Embeddings YAML reference"},sidebar:"docsSidebar",previous:{title:"Datasets",permalink:"/reference/spicepod/datasets"},next:{title:"Models",permalink:"/reference/spicepod/models"}},l={},t=[{value:"<code>embeddings</code>",id:"embeddings-1",level:2},{value:"<code>from</code>",id:"from",level:3},{value:"<code>name</code>",id:"name",level:3},{value:"<code>files</code>",id:"files",level:3},{value:"<code>params</code>",id:"params",level:3},{value:"<code>dependsOn</code>",id:"dependson",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"embeddings",children:"Embeddings"})}),"\n",(0,i.jsx)(n.p,{children:"Embeddings allow you to convert text or other data into vector representations, which can be used for various machine learning and natural language processing tasks."}),"\n",(0,i.jsx)(n.h2,{id:"embeddings-1",children:(0,i.jsx)(n.code,{children:"embeddings"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"embeddings"})," section in your configuration allows you to specify one or more embedding models to be used with your datasets."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'embeddings:\n  - from: huggingface:huggingface.co/sentence-transformers/all-MiniLM-L6-v2:latest\n    name: text_embedder\n    params:\n      max_length: "128"\n    datasets:\n      - my_text_dataset\n'})}),"\n",(0,i.jsx)(n.h3,{id:"from",children:(0,i.jsx)(n.code,{children:"from"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"from"})," field specifies the source of the embedding model. It supports the following prefixes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"huggingface:huggingface.co"})," - Models from Hugging Face"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"file:"})," - Local file paths"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"openai"})," - OpenAI models"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Follows the same convention as ",(0,i.jsx)(n.a,{href:"/reference/spicepod/models#from",children:(0,i.jsx)(n.code,{children:"models.from"})}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"name",children:(0,i.jsx)(n.code,{children:"name"})}),"\n",(0,i.jsx)(n.p,{children:"A unique identifier for this embedding component."}),"\n",(0,i.jsx)(n.h3,{id:"files",children:(0,i.jsx)(n.code,{children:"files"})}),"\n",(0,i.jsx)(n.p,{children:"Optional. A list of files associated with this model. Each file has:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"path"}),": The path to the file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Optional. A name for the file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Optional. The type of the file (automatically determined if not specified)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Follows the same convention as ",(0,i.jsx)(n.a,{href:"/reference/spicepod/models#files",children:(0,i.jsx)(n.code,{children:"models.files"})}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"params",children:(0,i.jsx)(n.code,{children:"params"})}),"\n",(0,i.jsx)(n.p,{children:"Optional. A map of key-value pairs for additional parameters specific to the embedding model."}),"\n",(0,i.jsx)(n.h3,{id:"dependson",children:(0,i.jsx)(n.code,{children:"dependsOn"})}),"\n",(0,i.jsx)(n.p,{children:"Optional. A list of dependencies that must be loaded and available before this embedding model."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,d)=>{d.d(n,{R:()=>c,x:()=>r});var i=d(6540);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);