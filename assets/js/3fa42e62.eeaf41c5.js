"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[8444],{1783:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=s(4848),o=s(8453);const r={title:"PostgreSQL Data Connector",sidebar_label:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation"},a=void 0,c={id:"components/data-connectors/postgres/index",title:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation",source:"@site/docs/components/data-connectors/postgres/index.md",sourceDirName:"components/data-connectors/postgres",slug:"/components/data-connectors/postgres/",permalink:"/components/data-connectors/postgres/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/components/data-connectors/postgres/index.md",tags:[],version:"current",frontMatter:{title:"PostgreSQL Data Connector",sidebar_label:"PostgreSQL Data Connector",description:"PostgreSQL Data Connector Documentation"},sidebar:"docsSidebar",previous:{title:"ODBC Data Connector",permalink:"/components/data-connectors/odbc"},next:{title:"S3 Data Connector",permalink:"/components/data-connectors/s3"}},i={},d=[{value:"Dataset Source/Federated SQL Query",id:"dataset-sourcefederated-sql-query",level:2},{value:"Configuration",id:"configuration",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"dataset-sourcefederated-sql-query",children:"Dataset Source/Federated SQL Query"}),"\n",(0,n.jsxs)(t.p,{children:["To use PostgreSQL as a dataset source or for federated SQL query, specify ",(0,n.jsx)(t.code,{children:"postgres"})," as the selector in the ",(0,n.jsx)(t.code,{children:"from"})," value for the dataset."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n"})}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["The connection to PostgreSQL can be configured by providing the following ",(0,n.jsx)(t.code,{children:"params"}),":"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_host"}),": The hostname of the PostgreSQL server."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_port"}),": The port of the PostgreSQL server."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_db"}),": The name of the database to connect to."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_user"}),": The username to connect with."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_pass"}),": The password to connect with. Use the ",(0,n.jsx)(t.a,{href:"/components/secret-stores/",children:"secret replacement syntax"})," to load the password from a secret store, e.g. ",(0,n.jsx)(t.code,{children:"${secrets:my_pg_pass}"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_sslmode"}),": Optional. Specifies the SSL/TLS behavior for the connection, supported values:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"verify-full"}),": (default) This mode requires an SSL connection, a valid root certificate, and the server host name to match the one specified in the certificate."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"verify-ca"}),": This mode requires an SSL connection and a valid root certificate."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"require"}),": This mode requires an SSL connection."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"prefer"}),": This mode will try to establish a secure SSL connection if possible, but will connect insecurely if the server does not support SSL."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"disable"}),": This mode will not attempt to use an SSL connection, even if the server supports it."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"pg_sslrootcert"}),": Optional parameter specifying the path to a custom PEM certificate that the connector will trust."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Configuration ",(0,n.jsx)(t.code,{children:"params"})," are provided either in the top level ",(0,n.jsx)(t.code,{children:"dataset"})," for a dataset source and federated SQL query, or in the ",(0,n.jsx)(t.code,{children:"acceleration"})," section for a data store."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: my_database\n      pg_user: my_user\n      pg_pass: ${secrets:my_pg_pass}\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: postgres:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: my_database\n      pg_user: my_user\n      pg_pass: ${secrets:my_pg_pass}\n      pg_sslmode: verify-ca\n      pg_sslrootcert: ./custom_cert.pem\n"})}),"\n",(0,n.jsx)(t.p,{children:"Specify different secrets for a PostgreSQL source and acceleration:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    params:\n      pg_host: localhost\n      pg_port: 5432\n      pg_db: data_store\n      pg_user: my_user\n      pg_pass: ${secrets:pg1_pass}\n    acceleration:\n      engine: postgres\n      params:\n        pg_host: localhost\n        pg_port: 5433\n        pg_db: acceleration\n        pg_user: two_user_two_furious\n        pg_pass: ${secrets:pg2_pass}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(6540);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);