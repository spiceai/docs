"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[1149],{2185:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(4848),s=t(8453);const a={title:"Indexes",sidebar_label:"Indexes",sidebar_position:1,description:"Learn how to add indexes to local acceleration tables in Spice."},c=void 0,r={id:"features/data-acceleration/indexes",title:"Indexes",description:"Learn how to add indexes to local acceleration tables in Spice.",source:"@site/docs/features/data-acceleration/indexes.md",sourceDirName:"features/data-acceleration",slug:"/features/data-acceleration/indexes",permalink:"/features/data-acceleration/indexes",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/features/data-acceleration/indexes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Indexes",sidebar_label:"Indexes",sidebar_position:1,description:"Learn how to add indexes to local acceleration tables in Spice."},sidebar:"docsSidebar",previous:{title:"Data Acceleration",permalink:"/features/data-acceleration/"},next:{title:"Constraints",permalink:"/features/data-acceleration/constraints"}},o={},d=[{value:"Column References",id:"column-references",level:2},{value:"Index Types",id:"index-types",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Database indexes are an essential tool for optimizing the performance of queries. Learn how to add indexes to the tables that Spice creates to accelerate data locally."}),"\n",(0,i.jsx)(n.p,{children:"Example Spicepod:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: spice.ai/eth.recent_blocks\n    name: eth.recent_blocks\n    acceleration:\n      enabled: true\n      engine: sqlite\n      indexes:\n        number: enabled # Index the `number` column\n        '(hash, timestamp)': unique # Add a unique index with a multicolumn key comprised of the `hash` and `timestamp` columns\n"})}),"\n",(0,i.jsx)(n.h2,{id:"column-references",children:"Column References"}),"\n",(0,i.jsx)(n.p,{children:"Column references can be used to specify which columns to index. The column reference can be a single column name or a multicolumn key. The column reference must be enclosed in parentheses if it is a multicolumn key."}),"\n",(0,i.jsx)(n.p,{children:"Examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"number"}),": Index the ",(0,i.jsx)(n.code,{children:"number"})," column"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(hash, timestamp)"}),": Index the ",(0,i.jsx)(n.code,{children:"hash"})," and ",(0,i.jsx)(n.code,{children:"timestamp"})," columns"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"index-types",children:"Index Types"}),"\n",(0,i.jsx)(n.p,{children:"There are two types of indexes that can be specified in a Spicepod:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled"}),": Creates a standard index on the specified column(s).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Similar to specifying ",(0,i.jsx)(n.code,{children:"CREATE INDEX my_index ON my_table (my_column)"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"unique"}),": Creates a unique index on the specified column(s). See ",(0,i.jsx)(n.a,{href:"/features/data-acceleration/constraints",children:"Constraints"})," for more information on working with unique constraints on locally accelerated tables.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Similar to specifying ",(0,i.jsx)(n.code,{children:"CREATE UNIQUE INDEX my_index ON my_table (my_column)"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Limitations",type:"warning",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Not supported for in-memory Arrow:"})," The default in-memory Arrow acceleration engine does not support indexes. Use ",(0,i.jsx)(n.a,{href:"/components/data-accelerators/duckdb",children:"DuckDB"}),", ",(0,i.jsx)(n.a,{href:"/components/data-accelerators/duckdb",children:"SQLite"}),", or ",(0,i.jsx)(n.a,{href:"/components/data-accelerators/postgres/",children:"PostgreSQL"})," as the acceleration engine to enable indexing."]}),"\n"]})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function c(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);