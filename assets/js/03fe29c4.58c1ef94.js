"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[7757],{3810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var n=r(4848),s=r(8453),a=r(3514);const c={title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:5,pagination_prev:null,pagination_next:null},i=void 0,l={id:"data-accelerators/index",title:"Data Accelerators",description:"",source:"@site/docs/data-accelerators/index.md",sourceDirName:"data-accelerators",slug:"/data-accelerators/",permalink:"/data-accelerators/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/data-accelerators/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:5,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},o={},d=[{value:"Data types",id:"data-types",level:2},{value:"Refresh SQL",id:"refresh-sql",level:2},{value:"Data Accelerator Docs",id:"data-accelerator-docs",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Data sourced by Data Connectors can be locally materialized and accelerated using a Data Accelerator."}),"\n",(0,n.jsx)(t.p,{children:"Acceleration is enabled on a dataset by setting the acceleration configuration. E.g."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - name: accelerated_dataset\n    acceleration:\n      enabled: true\n"})}),"\n",(0,n.jsxs)(t.p,{children:["For the complete reference specification see ",(0,n.jsx)(t.a,{href:"/reference/spicepod/datasets",children:"datasets"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"By default, datasets will be locally materialized using in-memory Arrow records."}),"\n",(0,n.jsx)(t.p,{children:"Data Accelerators using DuckDB, SQLite, or PostgreSQL engines can be used to materialize data in files or attached databases."}),"\n",(0,n.jsx)(t.p,{children:"Currently supported Data Accelerators include:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Engine Name"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Status"}),(0,n.jsx)(t.th,{children:"Engine Modes"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"arrow"})}),(0,n.jsx)(t.td,{children:"In-Memory Arrow Records"}),(0,n.jsx)(t.td,{children:"Alpha"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"memory"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/data-accelerators/duckdb",children:(0,n.jsx)(t.code,{children:"duckdb"})})}),(0,n.jsx)(t.td,{children:"Embedded DuckDB"}),(0,n.jsx)(t.td,{children:"Alpha"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"memory"}),", ",(0,n.jsx)(t.code,{children:"file"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/data-accelerators/sqlite",children:(0,n.jsx)(t.code,{children:"sqlite"})})}),(0,n.jsx)(t.td,{children:"Embedded SQLite"}),(0,n.jsx)(t.td,{children:"Alpha"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"memory"}),", ",(0,n.jsx)(t.code,{children:"file"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/data-accelerators/postgres/",children:(0,n.jsx)(t.code,{children:"postgres"})})}),(0,n.jsx)(t.td,{children:"Attached PostgreSQL"}),(0,n.jsx)(t.td,{children:"Alpha"}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"data-types",children:"Data types"}),"\n",(0,n.jsxs)(t.p,{children:["Data accelerators may not support all possible Apache Arrow data types. For complete compatibility, see ",(0,n.jsx)(t.a,{href:"/reference/datatypes",children:"specifications"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"refresh-sql",children:"Refresh SQL"}),"\n",(0,n.jsxs)(t.p,{children:["For datasets configured with a ",(0,n.jsx)(t.code,{children:"full"})," refresh mode, this is an optional setting that filters the locally accelerated data to a smaller working set. This can be useful if your application/dashboard only ever uses a subset of the data stored in the federated table."]}),"\n",(0,n.jsx)(t.p,{children:"Filters will be pushed down to the remote source, and only the requested data will be transferred over the network."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - name: accelerated_dataset\n    acceleration:\n      enabled: true\n      refresh_mode: full\n      refresh_interval: 10m\n      refresh_sql: |\n        SELECT * FROM accelerated_dataset WHERE city = 'Seattle'\n"})}),"\n",(0,n.jsxs)(t.p,{children:["For the complete reference, view the ",(0,n.jsx)(t.code,{children:"refresh_sql"})," section of ",(0,n.jsx)(t.a,{href:"/reference/spicepod/datasets#accelerationrefresh_sql",children:"datasets"}),"."]}),"\n",(0,n.jsx)(t.admonition,{title:"Limitations",type:"warning",children:(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"The refresh SQL only supports filtering data from the current dataset - joining across other datasets is not supported."}),"\n",(0,n.jsxs)(t.li,{children:["Selecting a subset of columns isn't supported - the refresh SQL needs to start with ",(0,n.jsx)(t.code,{children:"SELECT * FROM {name}"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Queries for data that have been filtered out will not fall back to querying against the federated table."}),"\n"]})}),"\n",(0,n.jsx)(t.h2,{id:"data-accelerator-docs",children:"Data Accelerator Docs"}),"\n","\n",(0,n.jsx)(a.A,{})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},3514:(e,t,r)=>{r.d(t,{A:()=>g});r(6540);var n=r(4164),s=r(4142),a=r(8774),c=r(5846),i=r(6654),l=r(1312),o=r(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=r(4848);function u(e){let{href:t,children:r}=e;return(0,h.jsx)(a.A,{href:t,className:(0,n.A)("card padding--lg",d.cardContainer),children:r})}function p(e){let{href:t,icon:r,title:s,description:a}=e;return(0,h.jsxs)(u,{href:t,children:[(0,h.jsxs)(o.A,{as:"h2",className:(0,n.A)("text--truncate",d.cardTitle),title:s,children:[r," ",s]}),a&&(0,h.jsx)("p",{className:(0,n.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function x(e){let{item:t}=e;const r=(0,s.Nr)(t),n=function(){const{selectMessage:e}=(0,c.W)();return t=>e(t,(0,l.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return r?(0,h.jsx)(p,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??n(t.items.length)}):null}function f(e){let{item:t}=e;const r=(0,i.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,s.cC)(t.docId??void 0);return(0,h.jsx)(p,{href:t.href,icon:r,title:t.label,description:t.description??n?.description})}function m(e){let{item:t}=e;switch(t.type){case"link":return(0,h.jsx)(f,{item:t});case"category":return(0,h.jsx)(x,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function j(e){let{className:t}=e;const r=(0,s.$S)();return(0,h.jsx)(g,{items:r.items,className:t})}function g(e){const{items:t,className:r}=e;if(!t)return(0,h.jsx)(j,{...e});const a=(0,s.d1)(t);return(0,h.jsx)("section",{className:(0,n.A)("row",r),children:a.map(((e,t)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(m,{item:e})},t)))})}},5846:(e,t,r)=>{r.d(t,{W:()=>o});var n=r(6540),s=r(4586);const a=["zero","one","two","few","many","other"];function c(e){return a.filter((t=>e.includes(t)))}const i={locale:"en",pluralForms:c(["one","other"]),select:e=>1===e?"one":"other"};function l(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,n.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:c(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),i}}),[e])}function o(){const e=l();return{selectMessage:(t,r)=>function(e,t,r){const n=e.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);const s=r.select(t),a=r.pluralForms.indexOf(s);return n[Math.min(a,n.length-1)]}(r,t,e)}}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var n=r(6540);const s={},a=n.createContext(s);function c(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);