"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[613],{2019:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=c(4848),a=c(8453);const s={title:"DuckDB Data Accelerator",sidebar_label:"DuckDB Data Accelerator",description:"DuckDB Data Accelerator Documentation",sidebar_position:2},i=void 0,r={id:"components/data-accelerators/duckdb",title:"DuckDB Data Accelerator",description:"DuckDB Data Accelerator Documentation",source:"@site/docs/components/data-accelerators/duckdb.md",sourceDirName:"components/data-accelerators",slug:"/components/data-accelerators/duckdb",permalink:"/components/data-accelerators/duckdb",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/components/data-accelerators/duckdb.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"DuckDB Data Accelerator",sidebar_label:"DuckDB Data Accelerator",description:"DuckDB Data Accelerator Documentation",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Data Refresh",permalink:"/components/data-accelerators/data-refresh"},next:{title:"SQLite Data Accelerator",permalink:"/components/data-accelerators/sqlite"}},o={},d=[{value:"Configuration",id:"configuration",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["To use DuckDB as Data Accelerator, specify ",(0,t.jsx)(n.code,{children:"duckdb"})," as the ",(0,t.jsx)(n.code,{children:"engine"})," for acceleration."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    acceleration:\n      engine: duckdb\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The DuckDB accelerator can be configured by providing the following ",(0,t.jsx)(n.code,{children:"params"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"duckdb_file"}),": The name for the file to back the DuckDB database. If the file does not exist, it will be created. Only applies if ",(0,t.jsx)(n.code,{children:"mode"})," is ",(0,t.jsx)(n.code,{children:"file"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configuration ",(0,t.jsx)(n.code,{children:"params"})," are provided in the ",(0,t.jsx)(n.code,{children:"acceleration"})," section for a data store. Other common ",(0,t.jsx)(n.code,{children:"acceleration"})," fields can be configured for DuckDB, see see ",(0,t.jsx)(n.a,{href:"/reference/spicepod/datasets",children:"datasets"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"datasets:\n  - from: spiceai:path.to.my_dataset\n    name: my_dataset\n    acceleration:\n      engine: duckdb\n      mode: file\n      params:\n        duckdb_file: /my/chosen/location/duckdb.db\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Limitations",type:"warning",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The DuckDB accelerator does not support schemas with ",(0,t.jsx)(n.a,{href:"https://duckdb.org/docs/sql/data_types/overview",children:"field types"}),": nested arrays/lists, UTF8/string arrays/lists, structs or map fields. For example:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Supported:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT [1, 2, 3];"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT ['1992-09-20 11:30:00.123456789', 'epoch'::TIMESTAMP]"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Unsupported:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT [['duck', 'goose', 'heron'], ['frog', 'toad']]"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT {'x': 1, 'y': 2, 'z': 3}"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT MAP(['key1', 'key2', 'key3'], [10, 20, 30])"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"SELECT ['duck', 'goose', 'heron'];"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["The DuckDB accelerator does not support ",(0,t.jsx)(n.code,{children:"Decimal256"})," (76 digits), as it exceeds DuckDB's maximum Decimal width of 38 digits."]}),"\n"]})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,c)=>{c.d(n,{R:()=>i,x:()=>r});var t=c(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);