"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[7757],{3810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var a=r(4848),n=r(8453),s=r(3514);const i={title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:5,pagination_prev:null,pagination_next:null},l=void 0,c={id:"data-accelerators/index",title:"Data Accelerators",description:"",source:"@site/docs/data-accelerators/index.md",sourceDirName:"data-accelerators",slug:"/data-accelerators/",permalink:"/data-accelerators/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/data-accelerators/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:5,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},d={},o=[{value:"Data types",id:"data-types",level:2},{value:"Filtered Refresh",id:"filtered-refresh",level:2},{value:"Refresh SQL",id:"refresh-sql",level:3},{value:"Refresh Data Window",id:"refresh-data-window",level:3},{value:"Behavior on Zero Results",id:"behavior-on-zero-results",level:2},{value:"Data Accelerator Docs",id:"data-accelerator-docs",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Data sourced by Data Connectors can be locally materialized and accelerated using a Data Accelerator."}),"\n",(0,a.jsx)(t.p,{children:"Acceleration is enabled on a dataset by setting the acceleration configuration. E.g."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - name: accelerated_dataset\n    acceleration:\n      enabled: true\n"})}),"\n",(0,a.jsxs)(t.p,{children:["For the complete reference specification see ",(0,a.jsx)(t.a,{href:"/reference/spicepod/datasets",children:"datasets"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"By default, datasets will be locally materialized using in-memory Arrow records."}),"\n",(0,a.jsx)(t.p,{children:"Data Accelerators using DuckDB, SQLite, or PostgreSQL engines can be used to materialize data in files or attached databases."}),"\n",(0,a.jsx)(t.p,{children:"Currently supported Data Accelerators include:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Engine Name"}),(0,a.jsx)(t.th,{children:"Description"}),(0,a.jsx)(t.th,{children:"Status"}),(0,a.jsx)(t.th,{children:"Engine Modes"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"arrow"})}),(0,a.jsx)(t.td,{children:"In-Memory Arrow Records"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"memory"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"/data-accelerators/duckdb",children:(0,a.jsx)(t.code,{children:"duckdb"})})}),(0,a.jsx)(t.td,{children:"Embedded DuckDB"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"memory"}),", ",(0,a.jsx)(t.code,{children:"file"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"/data-accelerators/sqlite",children:(0,a.jsx)(t.code,{children:"sqlite"})})}),(0,a.jsx)(t.td,{children:"Embedded SQLite"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"memory"}),", ",(0,a.jsx)(t.code,{children:"file"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"/data-accelerators/postgres/",children:(0,a.jsx)(t.code,{children:"postgres"})})}),(0,a.jsx)(t.td,{children:"Attached PostgreSQL"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsx)(t.td,{})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"data-types",children:"Data types"}),"\n",(0,a.jsxs)(t.p,{children:["Data accelerators may not support all possible Apache Arrow data types. For complete compatibility, see ",(0,a.jsx)(t.a,{href:"/reference/datatypes",children:"specifications"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"filtered-refresh",children:"Filtered Refresh"}),"\n",(0,a.jsx)(t.p,{children:"Often only a subset of the data in a federated table is used in applications or dashboards. Use the following options to filter the data Spice will accelerate to a working subset and reduce the amount of data that needs to be transferred and stored locally."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"#refresh-sql",children:"Refresh SQL"})," - Specify the filter as arbitrary SQL to be pushed down to the remote source."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"#refresh-data-window",children:"Refresh Data Window"})," - Filters out data from the federated source outside the specified window."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"refresh-sql",children:"Refresh SQL"}),"\n",(0,a.jsxs)(t.p,{children:["Specify filters for the data accelerated from the federated source via arbitrary SQL. Only supported for datasets configured with a ",(0,a.jsx)(t.code,{children:"full"})," refresh mode (the default)."]}),"\n",(0,a.jsx)(t.p,{children:"Filters will be pushed down to the remote source, and only the requested data will be transferred over the network."}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: databricks:my_dataset\n    name: accelerated_dataset\n    acceleration:\n      enabled: true\n      refresh_mode: full\n      refresh_check_interval: 10m\n      refresh_sql: |\n        SELECT * FROM accelerated_dataset WHERE city = 'Seattle'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["For the complete reference, view the ",(0,a.jsx)(t.code,{children:"refresh_sql"})," section of ",(0,a.jsx)(t.a,{href:"/reference/spicepod/datasets#accelerationrefresh_sql",children:"datasets"}),"."]}),"\n",(0,a.jsx)(t.admonition,{title:"Limitations",type:"warning",children:(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The refresh SQL only supports filtering data from the current dataset - joining across other datasets is not supported."}),"\n",(0,a.jsxs)(t.li,{children:["Selecting a subset of columns isn't supported - the refresh SQL needs to start with ",(0,a.jsx)(t.code,{children:"SELECT * FROM {name}"}),"."]}),"\n",(0,a.jsx)(t.li,{children:"Queries for data that have been filtered out will not fall back to querying against the federated table."}),"\n"]})}),"\n",(0,a.jsx)(t.h3,{id:"refresh-data-window",children:"Refresh Data Window"}),"\n",(0,a.jsxs)(t.p,{children:["Filters data from the federated source outside than the specified window. The only supported window is a lookback starting from ",(0,a.jsx)(t.code,{children:"now() - refresh_data_window"})," to ",(0,a.jsx)(t.code,{children:"now()"}),". This flag is only supported for datasets configured with a ",(0,a.jsx)(t.code,{children:"full"})," refresh mode (the default)."]}),"\n",(0,a.jsxs)(t.p,{children:["Used in combination with the ",(0,a.jsx)(t.a,{href:"/reference/spicepod/datasets#time_column",children:(0,a.jsx)(t.code,{children:"time_column"})})," to identify the column that contains the timestamps to filter on. The ",(0,a.jsx)(t.a,{href:"/reference/spicepod/datasets#time_format",children:(0,a.jsx)(t.code,{children:"time_format"})})," column (optional) can be used to instruct the Spice runtime how to interpret the timestamps in the ",(0,a.jsx)(t.code,{children:"time_column"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Can also be combined with ",(0,a.jsx)(t.code,{children:"refresh_sql"})," to further filter the data based on the temporal dimension."]}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: databricks:my_dataset\n    name: accelerated_dataset\n    time_column: created_at\n    acceleration:\n      enabled: true\n      refresh_mode: full\n      refresh_check_interval: 10m\n      refresh_sql: |\n        SELECT * FROM accelerated_dataset WHERE city = 'Seattle'\n      refresh_data_window: 1d\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This configuration will only accelerate data from the federated source that matches the filter ",(0,a.jsx)(t.code,{children:"city = 'Seattle'"})," and is less than 1 day old."]}),"\n",(0,a.jsx)(t.h2,{id:"behavior-on-zero-results",children:"Behavior on Zero Results"}),"\n",(0,a.jsxs)(t.p,{children:["By default, accelerated datasets will only return results that have been accelerated locally. If the locally accelerated data is a subset of the full dataset in the federated source, i.e. through setting ",(0,a.jsx)(t.code,{children:"refresh_sql"}),", ",(0,a.jsx)(t.code,{children:"refresh_data_window"})," or configuring retention policies, queries against the accelerated dataset may return zero results, where the federated table would return results."]}),"\n",(0,a.jsxs)(t.p,{children:["Control this behavior by setting ",(0,a.jsx)(t.code,{children:"on_zero_results"})," in the acceleration configuration."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"on_zero_results"}),":"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"return_empty"})," (Default) - Return an empty result set when no data is found in the accelerated dataset."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"use_source"})," - Fall back to querying the federated table when no data is found in the accelerated dataset."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - from: databricks:my_dataset\n    name: accelerated_dataset\n    acceleration:\n      enabled: true\n      refresh_sql: SELECT * FROM accelerated_dataset where city = 'Seattle'\n      on_zero_results: use_source\n"})}),"\n",(0,a.jsxs)(t.p,{children:["In this example a query against ",(0,a.jsx)(t.code,{children:"accelerated_dataset"})," within Spice like ",(0,a.jsx)(t.code,{children:"SELECT * FROM accelerated_dataset WHERE city = 'Portland'"})," would initially query against the accelerated data, see that it returns zero results and then fallback to querying against the federated table in Databricks."]}),"\n",(0,a.jsx)(t.admonition,{type:"warning",children:(0,a.jsxs)(t.p,{children:["It is possible that even though the accelerated table returns some results, it may not contain all the data that would be returned by the federated table. ",(0,a.jsx)(t.code,{children:"on_zero_results"})," only controls the behavior in the simple case where no data is returned by the acceleration for a given query."]})}),"\n",(0,a.jsx)(t.h2,{id:"data-accelerator-docs",children:"Data Accelerator Docs"}),"\n","\n",(0,a.jsx)(s.A,{})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},3514:(e,t,r)=>{r.d(t,{A:()=>b});r(6540);var a=r(4164),n=r(4142),s=r(8774),i=r(5846),l=r(6654),c=r(1312),d=r(1107);const o={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=r(4848);function u(e){let{href:t,children:r}=e;return(0,h.jsx)(s.A,{href:t,className:(0,a.A)("card padding--lg",o.cardContainer),children:r})}function f(e){let{href:t,icon:r,title:n,description:s}=e;return(0,h.jsxs)(u,{href:t,children:[(0,h.jsxs)(d.A,{as:"h2",className:(0,a.A)("text--truncate",o.cardTitle),title:n,children:[r," ",n]}),s&&(0,h.jsx)("p",{className:(0,a.A)("text--truncate",o.cardDescription),title:s,children:s})]})}function p(e){let{item:t}=e;const r=(0,n.Nr)(t),a=function(){const{selectMessage:e}=(0,i.W)();return t=>e(t,(0,c.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return r?(0,h.jsx)(f,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??a(t.items.length)}):null}function m(e){let{item:t}=e;const r=(0,l.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,n.cC)(t.docId??void 0);return(0,h.jsx)(f,{href:t.href,icon:r,title:t.label,description:t.description??a?.description})}function x(e){let{item:t}=e;switch(t.type){case"link":return(0,h.jsx)(m,{item:t});case"category":return(0,h.jsx)(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function j(e){let{className:t}=e;const r=(0,n.$S)();return(0,h.jsx)(b,{items:r.items,className:t})}function b(e){const{items:t,className:r}=e;if(!t)return(0,h.jsx)(j,{...e});const s=(0,n.d1)(t);return(0,h.jsx)("section",{className:(0,a.A)("row",r),children:s.map(((e,t)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(x,{item:e})},t)))})}},5846:(e,t,r)=>{r.d(t,{W:()=>d});var a=r(6540),n=r(4586);const s=["zero","one","two","few","many","other"];function i(e){return s.filter((t=>e.includes(t)))}const l={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,n.A)();return(0,a.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:i(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}}),[e])}function d(){const e=c();return{selectMessage:(t,r)=>function(e,t,r){const a=e.split("|");if(1===a.length)return a[0];a.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${a.length}: ${e}`);const n=r.select(t),s=r.pluralForms.indexOf(n);return a[Math.min(s,a.length-1)]}(r,t,e)}}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var a=r(6540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);