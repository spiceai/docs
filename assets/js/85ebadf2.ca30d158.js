"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[5660],{8246:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=a(4848),r=a(8453);const i={title:"Grafana & Prometheus",sidebar_label:"Grafana & Prometheus",description:"Monitoring Spice instances with Grafana & Prometheus",pagination_prev:"clients/index",pagination_next:null},t=void 0,o={id:"clients/grafana/index",title:"Grafana & Prometheus",description:"Monitoring Spice instances with Grafana & Prometheus",source:"@site/docs/clients/grafana/index.md",sourceDirName:"clients/grafana",slug:"/clients/grafana/",permalink:"/clients/grafana/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/clients/grafana/index.md",tags:[],version:"current",frontMatter:{title:"Grafana & Prometheus",sidebar_label:"Grafana & Prometheus",description:"Monitoring Spice instances with Grafana & Prometheus",pagination_prev:"clients/index",pagination_next:null},sidebar:"docsSidebar",previous:{title:"Clients and Tools",permalink:"/clients/"}},c={},l=[{value:"Import Grafana Dashboard",id:"import-grafana-dashboard",level:2},{value:"Kubernetes",id:"kubernetes",level:2},{value:"Prometheus",id:"prometheus",level:2},{value:"Local Quickstart",id:"local-quickstart",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The Spice runtime has a Prometheus endpoint configured by default on port ",(0,s.jsx)(n.code,{children:"9000"}),". There's also prebuilt Grafana dashboards for out of the box monitoring of all your Spice instances."]}),"\n",(0,s.jsx)(n.h2,{id:"import-grafana-dashboard",children:"Import Grafana Dashboard"}),"\n",(0,s.jsx)(n.p,{children:'Navigate to the Dashboards section in Grafana and click "New" > "Import".'}),"\n",(0,s.jsx)("img",{width:"500",src:"/img/grafana/import-dashboard-button.png"}),"\n",(0,s.jsxs)(n.p,{children:["Copy the dashboard JSON from ",(0,s.jsx)(n.a,{href:"https://github.com/spiceai/spiceai/blob/trunk/monitoring/grafana-dashboard.json",children:"monitoring/grafana-dashboard.json"})," into the Grafana import box."]}),"\n",(0,s.jsx)("img",{width:"500",src:"/img/grafana/import-dashboard.png"}),"\n",(0,s.jsx)(n.p,{children:'Click "Load".'}),"\n",(0,s.jsx)(n.h2,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,s.jsxs)(n.p,{children:["View the ",(0,s.jsx)(n.a,{href:"/deployment/kubernetes",children:"Kubernetes"})," deployment guide for configuring the Prometheus Operator to scrape metrics from the Spice instances in Kubernetes."]}),"\n",(0,s.jsx)(n.h2,{id:"prometheus",children:"Prometheus"}),"\n",(0,s.jsx)(n.p,{children:"Configure a Prometheus instance to scrape metrics from the Spice runtimes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"global:\n    scrape_interval: 1s\n    scrape_configs:\n    - job_name: spiceai\n        static_configs:\n        - targets: ['127.0.0.1:9000'] # Change to your Spice runtime endpoint + port\n"})}),"\n",(0,s.jsx)(n.h2,{id:"local-quickstart",children:"Local Quickstart"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial creates and configures Grafana and Prometheus locally to scrape and display metrics from several Spice instances. It assumes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Two Spice runtimes, ",(0,s.jsx)(n.code,{children:"spiced-main"})," and ",(0,s.jsx)(n.code,{children:"spiced-edge"}),", are running on ",(0,s.jsx)(n.code,{children:"127.0.0.1:9091"})," and ",(0,s.jsx)(n.code,{children:"127.0.0.1:9092"})," respectively."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"compose.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: "3"\nservices:\nprometheus:\n    image: prom/prometheus:latest\n    volumes:\n    - ./prometheus.yaml:/etc/prometheus/prometheus.yml\n    ports:\n    - 9090:9090\n    network_mode: "host"\ngrafana:\n    image: grafana/grafana:latest\n    volumes:\n    - ./.grafana/provisioning:/etc/grafana/provisioning\n    ports:\n    - 3000:3000\n    network_mode: "host"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"prometheus.yaml"})," to"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"global:\nscrape_interval: 1s\nscrape_configs:\n- job_name: spiced-main\n    static_configs:\n    - targets: ['127.0.0.1:9091']\n- job_name: spiced-edge\n    static_configs:\n    - targets: ['127.0.0.1:9092']\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a prometheus as a source to grafana. Create a ",(0,s.jsx)(n.code,{children:".grafana/provisioning/datasources/prometheus.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: 1\n\ndatasources:\n- name: Prometheus\n    type: prometheus\n    access: proxy\n    url: http://localhost:9090\n    isDefault: true\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the Docker Compose"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Go to ",(0,s.jsx)(n.code,{children:"http://localhost:3000/dashboard/import"})," and add the JSON from ",(0,s.jsx)(n.a,{href:"https://github.com/spiceai/spiceai/blob/trunk/monitoring/grafana-dashboard.json",children:"monitoring/grafana-dashboard.json"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The dashboard will have data from the Spice runtimes."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("img",{src:"/img/grafana/screenshot.png"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var s=a(6540);const r={},i=s.createContext(r);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);