"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[4310],{1611:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var t=i(4848),s=i(8453);const c={title:"Results Caching",sidebar_label:"Results Caching",description:"Learn how to use Spice in-memory caching of query results",sidebar_position:5,pagination_prev:null,pagination_next:null},r=void 0,a={id:"features/caching/index",title:"Results Caching",description:"Learn how to use Spice in-memory caching of query results",source:"@site/docs/features/caching/index.md",sourceDirName:"features/caching",slug:"/features/caching/",permalink:"/features/caching/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/features/caching/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Results Caching",sidebar_label:"Results Caching",description:"Learn how to use Spice in-memory caching of query results",sidebar_position:5,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},o={},l=[];function d(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Spice supports in-memory caching of query results, which is enabled by default for both the HTTP (",(0,t.jsx)(n.code,{children:"/v1/sql"}),") and Arrow Flight APIs."]}),"\n",(0,t.jsxs)(n.p,{children:["Results caching can help improve performance for bursts of requests and for non-accelerated results such as refresh data returned ",(0,t.jsx)(n.a,{href:"/data-accelerators/data-refresh#behavior-on-zero-results",children:"on zero results"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Results caching employs a ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU",children:"least-recently-used (LRU)"})," cache replacement policy with the ability to specify an item expiry duration, which defaults to 1-second."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: v1beta1\nkind: Spicepod\nname: app\n\nruntime:\n  results_cache:\n    enabled: true\n    cache_max_size: 128MiB\n    eviction_policy: lru \n    item_ttl: 1s\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enabled"})," - optional, ",(0,t.jsx)(n.code,{children:"true"})," by default"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cache_max_size"})," - optional, maximum cache size. Default is ",(0,t.jsx)(n.code,{children:"128MiB"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eviction_policy"})," - optional, cache replacement policy when the cached data reaches the ",(0,t.jsx)(n.code,{children:"cache_max_size"}),". Default and only currently supported value is ",(0,t.jsx)(n.code,{children:"lru"})," - ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU",children:"least-recently-used (LRU)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"item_ttl"})," - optional, cache entry expiration duration, 1 second by default."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},c=t.createContext(s);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);