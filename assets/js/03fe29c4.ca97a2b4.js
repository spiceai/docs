"use strict";(self.webpackChunkspiceaidocs=self.webpackChunkspiceaidocs||[]).push([[7757],{3810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>n,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>o});var a=r(4848),s=r(8453);const c={title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:7},n=void 0,d={id:"data-accelerators/index",title:"Data Accelerators",description:"",source:"@site/docs/data-accelerators/index.md",sourceDirName:"data-accelerators",slug:"/data-accelerators/",permalink:"/data-accelerators/",draft:!1,unlisted:!1,editUrl:"https://github.com/spiceai/docs/tree/trunk/spiceaidocs/docs/data-accelerators/index.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Data Accelerators",sidebar_label:"Data Accelerators",description:"",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"S3 Data Connector",permalink:"/data-connectors/s3"},next:{title:"PostgreSQL Data Accelerator",permalink:"/data-accelerators/postgres/"}},i={},o=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Data sourced by Data Connectors can be locally materialized and accelerated using a Data Accelerator."}),"\n",(0,a.jsx)(t.p,{children:"Acceleration is enabled on a dataset by setting the acceleration configuration. E.g."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"datasets:\n  - name: accelerated_dataset\n    acceleration:\n      enabled: true\n"})}),"\n",(0,a.jsxs)(t.p,{children:["For the complete reference specification see ",(0,a.jsx)(t.a,{href:"/reference/spicepod/datasets",children:"datasets"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"By default, datasets will be locally materialized using in-memory Arrow records."}),"\n",(0,a.jsx)(t.p,{children:"Data Accelerators using DuckDB, SQLite, or PostgreSQL engines can be used to materialize data in files or attached databases."}),"\n",(0,a.jsx)(t.p,{children:"Currently supported Data Accelerators include:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Engine Name"}),(0,a.jsx)(t.th,{children:"Description"}),(0,a.jsx)(t.th,{children:"Status"}),(0,a.jsx)(t.th,{children:"Engine Modes"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"arrow"})}),(0,a.jsx)(t.td,{children:"In-Memory Arrow Records"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"memory"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"duckdb"})}),(0,a.jsx)(t.td,{children:"Embedded DuckDB"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"memory"}),", ",(0,a.jsx)(t.code,{children:"file"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"/data-accelerators/sqlite",children:(0,a.jsx)(t.code,{children:"sqlite"})})}),(0,a.jsx)(t.td,{children:"Embedded SQLite"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"memory"}),", ",(0,a.jsx)(t.code,{children:"file"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"/data-accelerators/postgres/",children:(0,a.jsx)(t.code,{children:"postgres"})})}),(0,a.jsx)(t.td,{children:"Attached PostgreSQL"}),(0,a.jsx)(t.td,{children:"Alpha"}),(0,a.jsx)(t.td,{})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>d});var a=r(6540);const s={},c=a.createContext(s);function n(e){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);